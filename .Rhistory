library(ggplot2)
gg_hisp <- ggplot(data = state_perc, aes(x = Plot_oder, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic()
gg_hisp
gg_hisp <- ggplot(data = state_perc, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic()
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Hispanic") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = 1:nrow(.))
gg_hisp <- ggplot(data = state_perc, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic()
gg_hisp
View(state_perc)
mutate(Plot_order = 1:length(State)
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Hispanic") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = 1:length(State))
gg_hisp <- ggplot(data = state_perc, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic()
gg_hisp
View(state_perc)
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Hispanic") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
mutate(Plot_order = order(Percent))
View(hisp)
hisp <- state_perc %>%
filter(Group == "Hispanic") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = 1:length(State))
View(hisp)
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic()
gg_hisp
source("state_diversity/scripts/__Util_PlottingFunctions.R")
source("state_diversity/scripts/__Util_GraphingFunctions.R")
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_ctokita()
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
scale_x_discrete(label = State)
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
scale_x_discrete(label = hisp$State)
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State)
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Hispanic") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State)
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0, 0.1))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.01, 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.05, 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angel = 0.45))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = 0.45))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = 45))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 1))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity") +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", size = 0.2) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", size = 0.1) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.1) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Asian") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Black") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "White") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Native_American") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Native_Hawaiian") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Pacific_Islander") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
###############
# Plot Hispanic population by state
###############
hisp <- state_perc %>%
filter(Group == "Mixed_Race") %>%
filter(!State %in% c("District of Columbia", "Puerto Rico", "United States")) %>%
arrange(desc(Percent)) %>%
mutate(Plot_order = as.factor(1:length(State)))
gg_hisp <- ggplot(data = hisp, aes(x = Plot_order, y = Percent)) +
geom_bar(stat = "identity", width = 0.5) +
theme_classic() +
scale_x_discrete(label = hisp$State) +
scale_y_continuous(expand = c(0.02, 0)) +
theme(axis.text.x = element_text(angle = -45, hjust = 0))
gg_hisp
########################################################################################
#
# State Diversity Analysis - Analyze the data for diversity
#
########################################################################################
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
source("state_diversity/scripts/__Util_GraphingFunctions.R")
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
rm(list = ls())
library(dplyr)
library(tidyr)
library(ggplot2)
###############
# Load data
###############
load("state_diversity/data/State_Demographic_Percents.Rdata")
###############
# Calculate Simpson's Index/HHI
###############
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Diversity = sum((.)^2))
###############
# Calculate Simpson's Index/HHI
###############
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Diversity = function(x) {sum(x^2)}))
###############
# Calculate Simpson's Index/HHI
###############
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Diversity = function(x) {sum(x^2)})
###############
# Calculate Simpson's Index/HHI
###############
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Diversity = function(Percent) {sum(x^2)})
sum(x^2)
###############
# Calculate Simpson's Index/HHI
###############
simpson_index <- function(x) {
sum(x^2)
}
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Diversity = simpson_index(Percent))
View(diversity_simp)
View(state_perc)
test <- state_perc$Percent[state_perc$State=="Hawaii"]
test
test^2
sum(test^2)
simpson_index(test)
###############
# Calculate Shannon's entropy
###############
shannon_entropy <- function(x) {
-1 * sum(x * log(x))
}
diversity_shann <- state_perc %>%
group_by(State) %>%
summarise(Diversity = shannon_entropy(Percent))
View(diversity_shann)
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_simp)
View(diversity_data)
###############
simpson_index <- function(x) {
sum(x^2)
}
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Simp_Ind = simpson_index(Percent))
###############
# Calculate Shannon's entropy
###############
shannon_entropy <- function(x) {
-1 * sum(x * log(x))
}
diversity_shann <- state_perc %>%
group_by(State) %>%
summarise(Shann_Ent = shannon_entropy(Percent))
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_simp)
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_simp, by = "State")
View(diversity_data)
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_simp, by = "State") %>%
mutate(Rel_Simp = Simp_Ind / max(Simp_Ind))
View(diversity_data)
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_shann) %>%
mutate(Rel_Simp = Simp_Ind / max(Simp_Ind))
View(diversity_data)
###############
# Merge and compare
###############
diversity_data <- merge(diversity_simp, diversity_shann) %>%
mutate(Rel_Simp = Simp_Ind / max(Simp_Ind),
Rel_Shann = Shann_Ent / max(Shann_Ent))
# Compare
gg_div <- ggplot(data = diversity_data, aes(x = Rel_Simp, Rel_Shann)) +
geom_point(color = "blue") +
theme_classic()
Shann_Ent
gg_div
###############
# Calculate Simpson's Index/HHI
###############
simpson_index <- function(x) {
1 - sum(x^2)
}
diversity_simp <- state_perc %>%
group_by(State) %>%
summarise(Simp_Ind = simpson_index(Percent))
###############
# Calculate Shannon's entropy
###############
shannon_entropy <- function(x) {
-1 * sum(x * log(x))
}
diversity_shann <- state_perc %>%
group_by(State) %>%
summarise(Shann_Ent = shannon_entropy(Percent))
###############
# Merge and compare
###############
# Merge and calcualte normalized metrics
diversity_data <- merge(diversity_simp, diversity_shann) %>%
mutate(Rel_Simp = Simp_Ind / max(Simp_Ind),
Rel_Shann = Shann_Ent / max(Shann_Ent))
# Compare
gg_div <- ggplot(data = diversity_data, aes(x = Rel_Simp, Rel_Shann)) +
geom_point(color = "blue") +
theme_classic()
gg_div
# Compare
gg_div <- ggplot(data = diversity_data, aes(x = Simp_Ind, Shann_Ent)) +
geom_point(color = "blue") +
theme_classic()
gg_div
View(diversity_data)
###############
# Merge and compare
###############
# Merge and calcualte normalized metrics
diversity_data <- merge(diversity_simp, diversity_shann) %>%
mutate(Rel_Simp = Simp_Ind / max(Simp_Ind),
Rel_Shann = Shann_Ent / max(Shann_Ent)) %>%
arrange(desc(Rel_Simp)) %>%
mutate(Simp_rank = 1:length(State)) %>%
arrange(desc(Rel_Shann)) %>%
mutate(Shann_rank = 1:length(State))
View(diversity_data)
